案例：
	登录管理器  vs accountEntity

在客户端这边，我们以登录管理器来管理 登录行为 以及 登录相关状态。

登录管理器就是登录相关事务的标准处理的地方。

客户端实现登录管理器遇到一个问题：

登录成功是由 account 通知过来的，

登录成功后，需要向服务器请求游戏角色，并基于角色数量来判定是进入 角色选择状态还是 角色创建状态。

而向服务器请求角色有两个地方可以放。


1. 在 Account的 enable中直接调用 Account的queryRoleInfo。
2. 在 LoginMgr 的 onLoginSucessful 中调用 Account 的 queryRoleInfo。


这里，我们要选择 第2这种实现方式。

只有登录成功标识被设置后，我们才能做登录成功后的事情。不要贪图方便，在Account的 enable中就去做。

因为我们已经有了 登录管理器来控制这个登录的过程，所有的登录相关的事情都应该通过它来调度。

这个在其他的类似设计中，都应该用这个来理解。

